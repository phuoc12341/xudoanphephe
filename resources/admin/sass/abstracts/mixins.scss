// ======================================================
// Abstracts :: Mixins
// ======================================================

// Responsive
$break-xs: 576px;
$break-sm: 768px;
$break-md: 992px;
$break-lg: 1200px;
$break-xlg: 1270px;
$break-xxlg: 1600px;

@mixin respond-to($media) {
    @if $media==sm {
        @media only screen and (min-width: $break-sm) {
            @content;
        }
    }

    @else if $media==md {
        @media only screen and (min-width: $break-md) {
            @content;
        }
    }

    @else if $media==lg {
        @media only screen and (min-width: $break-lg) {
            @content;
        }
    }

    @else if $media==xlg {
        @media only screen and (min-width: $break-xlg) {
            @content;
        }
    }

    @else if $media==xxlg {
        @media only screen and (min-width: $break-xxlg) {
            @content;
        }
    }

    @else if $media==max-xlg {
        @media only screen and (max-width: $break-xlg - 1) {
            @content;
        }
    }

    @else if $media==max-lg {
        @media only screen and (max-width: $break-lg - 1) {
            @content;
        }
    }

    @else if $media==max-md {
        @media only screen and (max-width: $break-md - 1) {
            @content;
        }
    }

    @else if $media==max-sm {
        @media only screen and (max-width: $break-sm - 1) {
            @content;
        }
    }

    @else if $media==max-xs {
        @media only screen and (max-width: $break-xs - 1) {
            @content;
        }
    }

    @else if $media==sm-md {
        @media only screen and (min-width: $break-sm) and (max-width: $break-md - 1) {
            @content;
        }
    }
}

// position Mixin
@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

@mixin size($width, $height) {
    width: $width;
    height: $height;
}

// Placeholder

@mixin placeholder {
    &::-webkit-input-placeholder {
        @content
    }

    &:-moz-placeholder {
        @content
    }

    &::-moz-placeholder {
        @content
    }

    &:-ms-input-placeholder {
        @content
    }
}

@mixin scroll-bar {
    &::-webkit-scrollbar {
        width: 6px;
        border-radius: 3px;
    }

    &::-webkit-scrollbar-track {
        background: transparent;
        border-radius: 3px;
    }

    &::-webkit-scrollbar-thumb {
        background: #C1C1C1;
        border-radius: 3px;
    }

    &::-webkit-scrollbar-thumb:hover {
        background: #555;
        border-radius: 3px;
    }
}

//Border Radius
@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    border-radius: $radius;
    background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

//Center Block
@mixin center-block ($width) {
    width: $width;
    display: block;
    margin: 0 auto;
}

// Single side border-radius
@mixin border-top-radius($radius) {
    -webkit-border-top-right-radius: $radius;
    border-top-right-radius: $radius;
    -webkit-border-top-left-radius: $radius;
    border-top-left-radius: $radius;
    background-clip: padding-box;
}
@mixin border-right-radius($radius) {
    -webkit-border-bottom-right-radius: $radius;
    border-bottom-right-radius: $radius;
    -webkit-border-top-right-radius: $radius;
    border-top-right-radius: $radius;
    background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
    -webkit-border-bottom-right-radius: $radius;
    border-bottom-right-radius: $radius;
    -webkit-border-bottom-left-radius: $radius;
    border-bottom-left-radius: $radius;
    background-clip: padding-box;
}
@mixin border-left-radius($radius) {
    -webkit-border-bottom-left-radius: $radius;
    border-bottom-left-radius: $radius;
    -webkit-border-top-left-radius: $radius;
    border-top-left-radius: $radius;
    background-clip: padding-box;
}

// CSS Triangles Mixin
@mixin css-triangle($direction, $color, $height, $width) {
    // Base styles for all triangles
    border-style: solid;
    height: 0;
    width: 0;
    // Cardinal Directions - can't be scalene this way
    @if($direction == 'top') {
        border-color: transparent transparent $color transparent;
        border-width: 0 ($width/2) $height ($width/2);
    }
    @if ($direction == 'bottom') {
        border-color: $color transparent transparent transparent;
        border-width: $height ($width/2) 0 ($width/2);
    }
    @if ($direction == 'right') {
        border-color: transparent transparent transparent $color;
        border-width: ($height/2) 0 ($height/2) $width;
    }
    @if ($direction == 'left') {
        border-color: transparent $color transparent transparent;
        border-width: ($height/2) $width ($height/2) 0;
    }
    // Ordinal Directions - can be scalene this way!
    @if ($direction == 'top-left') {
        border-color: $color transparent transparent transparent;
        border-width: $height $width 0 0;
    }
    @if ($direction == 'top-right') {
        border-color: transparent $color transparent transparent;
        border-width: 0 $width $height 0;
    }
    @if ($direction == 'bottom-left') {
        border-color: transparent transparent transparent $color;
        border-width: $height 0 0 $width;
    }
    @if ($direction == 'bottom-right') {
        border-color: transparent transparent $color transparent;
        border-width: 0 0 $height $width;
    }
}



//Box shadow
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow:inset $top $left $blur $color;
        -moz-box-shadow:inset $top $left $blur $color;
        box-shadow:inset $top $left $blur $color;
    } @else {
        -webkit-box-shadow: $top $left $blur $color;
        -moz-box-shadow: $top $left $blur $color;
        box-shadow: $top $left $blur $color;
    }
}
//Text Shadow
@mixin text-shadow($top, $left, $blur, $color) {
    -webkit-text-shadow: $top $left $blur $color;
    -moz-text-shadow: $top $left $blur $color;
    text-shadow: $top $left $blur $color;
}

/*Placeholders*/
@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

@mixin placeholder-color($color) {
    &.placeholder {
        color: $color
    }

    &:-moz-placeholder {
        color: $color
    }

    &::-webkit-input-placeholder {
        color: $color
    }

    &:-ms-input-placeholder {
        color: $color
    }
}

/*Truncate*/
@mixin truncate($truncation-boundary) {
    max-width: $truncation-boundary;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

//Clearfix
@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

/*--------------------------------
	Responsive ratio
	Used for creating scalable elements that maintain the same ratio
	example: .element { @include responsive-ratio(400, 300); }
*/
@mixin responsive-ratio($x,$y, $pseudo: false) {
    $padding: unquote( ( $y / $x ) * 100 + '%' );

    @if $pseudo {
        &::before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    } @else {
        padding-top: $padding;
    }
}

@mixin responsive-ratio-img(){
    position: absolute;left: 0;top: 0;width: 100%;height: 100%;object-fit: cover;
}

//Transition
@mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    transition: $args;
}

// Browser Prefixes
@mixin transform($transforms) {
    -webkit-transform: $transforms;
    -moz-transform: $transforms;
    transform: $transforms;
}

// Rotate
@mixin rotate ($deg) {
    @include transform(rotate(#{$deg}deg));
}

// Scale
@mixin scale($scale) {
    @include transform(scale($scale));
}

// Translate
@mixin translate ($x, $y) {
    @include transform(translate($x, $y));
}

// Skew
@mixin skew ($x, $y) {
    @include transform(skew(#{$x}deg, #{$y}deg));
}

// Transform Origin
@mixin transform-origin ($origin) {
    -webkit-transform-origin: $origin;
    -moz-transform-origin: $origin;
    transform-origin: $origin;
}

//Backgroud Gradien Vertical Y
@mixin linear-gradient-v ($from, $to) {
    background-color: $from;
    background-image: -webkit-linear-gradient(top, $from, $to); /* Chrome 10-25, iOS 5+, Safari 5.1+ */
    background-image:         linear-gradient(to bottom, $from, $to); /* Chrome 26, Firefox 16+, IE 10+, Opera 12.10+ */
}

//Backgroud Gradien Horizontal X
@mixin linear-gradient-h ($from, $to) {
    background-color: $from;
    background-image: -webkit-linear-gradient(left, $from, $to); /* Chrome 10-25, iOS 5+, Safari 5.1+ */
    background-image:         linear-gradient(to right, $from, $to); /* Chrome 26, Firefox 16+, IE 10+, Opera 12.10+ */
}


//Color RGBA
@mixin transparent-backgound($color: #000, $value:0.5){
    $start: "rgb(";
    $end: ")";
    background: #{$start}red($color), green($color), blue($color)#{$end};
    background: rgba($color, $value);
}

//Line number
@mixin line-number ($number) {
    overflow: hidden;text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: $number;
    -webkit-box-orient: vertical;
}

